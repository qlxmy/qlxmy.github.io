<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Access注入</title>
    <url>/2020/01/13/Access%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h3 id="Access的一些特性"><a href="#Access的一些特性" class="headerlink" title="Access的一些特性"></a>Access的一些特性</h3><p>Access的一些特性如下：<br>●Aceess通常搭配ASP网站；<br>●Access的数据库文件存放在网站目录下（通常是database或者db目录），后缀格式通常是mdb（也可能是asp或者asa）。我们可以想办法下载数据库文件。<br>●Access数据库没有用户名和密码，也没有数据库名。</p>
<h3 id="Access手工注入"><a href="#Access手工注入" class="headerlink" title="Access手工注入"></a>Access手工注入</h3><p>Access注入的步骤通常如下：<br>（1）.判断注入点<br>（2）.猜解表名<br>（3）.猜解列名<br>（4）.猜解内容</p>
<h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><p>判断注入点有很多种方法，要根据具体情况使用，所以这里也不详细解释。</p>
<h4 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h4><p>Access的表名和列名都只能靠猜。表名的猜解使用exists函数，猜解语句如下：</p>
<pre><code>and exists(select * from 表名)</code></pre>

<p>如果返回正常，说明数据库中有这个表。<br>猜解是否有user表：<br><img src="http://static.zybuluo.com/xmy2017/vanlgelocnslo0ks81eiccog/1.png" alt="1.png-34.6kB"><br>显示出错，说明没有user表。<br>猜解是否有admin表：<br><img src="http://static.zybuluo.com/xmy2017/lrve5pbr4w72pwac8njkahkp/2.png" alt="2.png-291.2kB"><br>很明显，有admin这个表。</p>
<h4 id="猜解列名"><a href="#猜解列名" class="headerlink" title="猜解列名"></a>猜解列名</h4><p>列名的猜解和表名一样，也是用exists函数。语句如下：</p>
<pre><code>and exists(select 列名 from 表名)</code></pre>

<p>返回正常，则说明有这个列。。<br>猜解是否有admin列：<br><img src="http://static.zybuluo.com/xmy2017/wyziikcfo4yhk4qjhs1yjj17/3.png" alt="3.png-296.1kB"><br>猜解是否有password列：<br><img src="http://static.zybuluo.com/xmy2017/bxjo7kb22it921jat49dxg2i/4.png" alt="4.png-293.6kB"></p>
<h4 id="猜解列的长度"><a href="#猜解列的长度" class="headerlink" title="猜解列的长度"></a>猜解列的长度</h4><p>猜解列的长度需要用到len函数，语句如下：</p>
<pre><code>and (select top 1 len(列名) from 表名)>num</code></pre>

<p>num是数字，可以是1，2，3……直到页面返回出错为止，则该值就是列的长度。这个语句只能猜解第一条记录的长度。<br>　　猜解admin列第一条记录的长度：<br><img src="http://static.zybuluo.com/xmy2017/r5t8h26jrbyphhljsgnvc6is/5.png" alt="5.png-50.1kB"><br>admin列第一条记录的长度是5。</p>
<h4 id="猜解列的内容"><a href="#猜解列的内容" class="headerlink" title="猜解列的内容"></a>猜解列的内容</h4><p>猜解列的内容用到两个函数mid和asc，mid(列名, N, 1)函数发截取第N位字符，asc(mid(列名, N, 1))函数取得第N位字符ascii码，ascii码对应的字符就是我们猜解出来的内容。语句如下：</p>
<pre><code>and select top 1 asc(mid(列名, N, 1) from 表名)>num</code></pre>

<p>num是ascii码，直到页面返回出错，则该值就是对应位置字符的ascii码。<br>猜解admin列第一条记录的第一个字符：<br><img src="http://static.zybuluo.com/xmy2017/d3ctniqkkfmbl3nh6kfdcz7m/6.png" alt="6.png-46.3kB"><br>由上面可知，admin列第一个值第一个字符对应的ascii码是97，则该字符为“a”，接下来的字符猜解方法是一样的。</p>
<h4 id="union查询"><a href="#union查询" class="headerlink" title="union查询"></a>union查询</h4><p>上面的方法在猜解列的内容时是十分麻烦的，我们可以使用union使猜解变得简单起来。<br>union是针对两个表的联合查询，使用union时两个表的列数和数据类型必须完全一致才能进行查询。<br>下面用实例说话，我们猜解当前表的列数，使用order by语句：</p>
<pre><code>order by num</code></pre>

<p>num是列的数量，直到页面返回不正常，那上一个正常的返回值就是列数。<br><img src="http://static.zybuluo.com/xmy2017/7zn74u4eps3pupbye4nul9fr/7.png" alt="7.png-32kB"><br>返回错误，由此可知当前表的列数是5。<br>使用union也可以猜解当前表的列数，语句是：</p>
<pre><code>and 1=2 union select 1,2,3…N from 表名</code></pre>

<p>使用and 1=2使第一条查询语句出错，union执行第二条查询语句，n是列数，由1，2，3一直往上加，直到页面出现数字为止。这里需要注意的是，后面的表名不是当前表的表名，而是你需要猜解的表名，而猜解出来的列数却是当前表的列数。<br><img src="http://static.zybuluo.com/xmy2017/ywex8phxnhkksiozd6shzw5l/8.png" alt="8.png-35.1kB"><br>从图中我们可以看到2和3这两个数字，这表示它显示的是当前表的第2列和第3列的查询结果。<br>我们利用上面得到的数字来进行暴表，语句如下：</p>
<pre><code>And 1=2 union select 1,列1,列2,3,4,5 from 表名</code></pre>

<p><img src="http://static.zybuluo.com/xmy2017/5otmxx3jnwaanuundbmdi3u7/9.png" alt="9.png-41.4kB"><br>看图，我们成功地将admin和password这两列的第一条记录暴出来了，是不是比上面使用的方法简单多了。</p>
]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>.htaccess绕过黑名单上传</title>
    <url>/2020/01/11/htaccess%E7%BB%95%E8%BF%87%E9%BB%91%E5%90%8D%E5%8D%95%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<p>.htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。<sup>[1]</sup><br>在文件上传使用扩展名黑名单且没有过滤.htaccess的情况下，可以使用.htaccess文件绕过上传限制。</p>
<a id="more"></a>
<p>测试上传功能的代码如下：</p>
<pre><code>&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;
&lt;form action=&quot;&quot; enctype=&quot;multipart/form-data&quot; method=&quot;POST&quot;&gt;
&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;
&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;upload&quot;&gt;
&lt;/form&gt;
&lt;?php 
$black_list = array(&#39;html&#39;, &#39;htm&#39;, &#39;php&#39;, &#39;php2&#39;, &#39;php3&#39;, &#39;php4&#39;, &#39;php5&#39;, &#39;phtml&#39;, &#39;txt&#39;);
if(isset($_FILES[&#39;file&#39;]))
{
    $file_name = $_FILES[&#39;file&#39;][&#39;name&#39;];
    $file_path = &#39;images/&#39; . $file_name;
    $file_ext = substr($file_name, strrpos($file_name, &#39;.&#39;)+1);
    $file_tmp = $_FILES[&#39;file&#39;][&#39;tmp_name&#39;];
    foreach($black_list as $key=&gt;$value)
    {
        if($value == strtolower($file_ext))
        {
            echo &quot;不允许上传的文件类型！&quot;;
            exit(0);
        }
    }

    if(!move_uploaded_file($file_tmp, $file_path))
    {
        echo &quot;文件上传失败！&quot;;
    }
    else
    {
        echo &quot;文件上传成功，文件路径为&quot; . $file_path;
    }
}
?&gt;</code></pre><p>新建.htaccess文件内容如下：</p>
<pre><code>&lt;FilesMatch &quot;lala&quot;&gt;
SetHandler application/x-httpd-php
&lt;/FilesMatch&gt;</code></pre><p>上传该文件，由于文件扩展名不在黑名单中，所以可以上传成功：<br><img src="http://static.zybuluo.com/xmy2017/01ud0mg1ecckbsmvfgh0kjzk/1.png" alt="1.png-24.9kB"><br>接着上传一个文件名包含“lala”且没有扩展名一句话木马文件：<br><img src="http://static.zybuluo.com/xmy2017/tcu7n64hghwlnjpjclc6xeug/2.png" alt="2.png-25.2kB"><br>两个文件都能上传成功，使用菜刀连接lala文件：<br><img src="http://static.zybuluo.com/xmy2017/jnt9ctkvkwl3e5g62yvlze1k/3.png" alt="3.png-75.3kB"><br>所以在使用黑名单过滤且未包含htaccess扩展名的情况下，.htaccess通常是个大杀器。</p>
<p>参考：<br>[1]百度百科：<a href="https://baike.baidu.com/item/htaccess/1645473" target="_blank" rel="noopener">https://baike.baidu.com/item/htaccess/1645473</a></p>
]]></content>
      <categories>
        <category>文件上传</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
